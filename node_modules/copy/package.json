{
  "name": "copy",
  "description": "Copy files or directories using globs.",
  "version": "0.1.3",
  "homepage": "https://github.com/jonschlinkert/copy",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/copy"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/copy/issues"
  },
  "license": "MIT",
  "files": [
    "index.js",
    "recurse.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "async": "^1.4.2",
    "bluebird": "^2.10.0",
    "extend-shallow": "^2.0.1",
    "glob-parent": "^1.2.0",
    "graceful-fs": "^4.1.2",
    "lazy-globby": "^0.1.1",
    "mkdirp": "^0.5.1"
  },
  "devDependencies": {
    "gulp": "^3.9.0",
    "mocha": "*",
    "should": "*"
  },
  "keywords": [
    "async",
    "copy",
    "file",
    "file-system",
    "fs",
    "glob",
    "move",
    "path",
    "pattern",
    "promise",
    "stream",
    "sync",
    "system"
  ],
  "verb": {
    "related": {
      "list": [
        "write",
        "expand-config",
        "expand-target",
        "expand-task",
        "expand-files",
        "export-files"
      ]
    }
  },
  "readme": "# copy [![NPM version](https://badge.fury.io/js/copy.svg)](http://badge.fury.io/js/copy)\n\n> Copy files or directories using globs.\n\n**TODO**\n\n* [x] sync\n* [x] async\n* [x] dir\n* [x] dir sync\n* [x] one file\n* [x] one file sync\n* [ ] promise\n* [ ] stream\n* [ ] docs\n* [ ] tests\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i copy --save\n```\n\n## Usage\n\n```js\nvar copy = require('copy');\n```\n\n## Examples\n\n**Usage with [gulp]**\n\nIn your project's gulpfile.js:\n\n```js\nvar gulp = require('gulp');\nvar copy = require('copy');\n\ngulp.task('default', function (cb) {\n  copy('fixtures/*.txt', 'actual', cb);\n});\n```\n\n## API\n\n### [copy](index.js#L24)\n\nAsynchronously copy a glob of files from `a` to `b`.\n\n**Params**\n\n* `patterns` **{String|Array}**: Glob pattern or array of glob patterns.\n* `dest` **{String}**: Destination directory\n* `options` **{Object}**: Options for [mkdirp] or [globby]. You may also pass a custom [rewrite] function on the options.\n* `cb` **{Function}**: Callback\n* `err` **{Object}**: [cb] Error object\n* `files` **{Array}**: [cb] Array of files\n\n### [.sync](index.js#L48)\n\nSynchronously copy a glob of files from `a` to `b`.\n\n**Params**\n\n* `patterns` **{String|Array}**: Glob pattern or array of glob patterns.\n* `dest` **{String}**: Destination directory\n* `options` **{Object}**: Options for [mkdirp] or [globby]. You may also pass a custom [rewrite] function on the options.\n\n### [.dir](index.js#L72)\n\nAsynchronously and recursively copy all files in directory `a` to `b`.\n\n**Params**\n\n* `dirname` **{String}**: Source directory\n* `dest` **{String}**: Destination directory\n* `options` **{Object}**: Options for [mkdirp]. You may also pass a custom [rewrite] function on the options.\n* `cb` **{Function}**: Callback\n* `err` **{Object}**: [cb] Error object\n* `files` **{Array}**: [cb] Array of files\n\n### [.dirSync](index.js#L96)\n\nSynchronously and recursively copy all files in directory `a` to `b`.\n\n**Params**\n\n* `dirname` **{String}**: Source directory\n* `dest` **{String}**: Destination directory\n* `options` **{Object}**: Options for [mkdirp]. You may also pass a custom [rewrite] function on the options.\n\n### [.one](index.js#L117)\n\nAsynchronously copy a single file from `a` to `b`. A thin wrapper around the `copy.base`\nmethod, to provide error reporting and to create directories when they\ndon't already exist.\n\n**Params**\n\n* `fp` **{String}**: Source file path\n* `dest` **{String}**: Destination directory\n* `options` **{Object}**: Options for [mkdirp]. You may also pass a custom [rewrite] function on the options.\n* `cb` **{Function}**: Callback\n* `err` **{Object}**: [cb] Error object\n* `files` **{Array}**: [cb] Array of files\n\n### [.oneSync](index.js#L148)\n\nSynchronously copy a single file from `a` to `b`. A thin wrapper around the `copy.base`\nmethod, to provide error reporting and to create directories when they\ndon't already exist.\n\n**Params**\n\n* `fp` **{String}**: Source file path\n* `dest` **{String}**: Destination directory\n* `options` **{Object}**: Options for [mkdirp]. You may also pass a custom [rewrite] function on the options.\n\n### [.base](index.js#L168)\n\nBase function for copying files.\n\n**Params**\n\n* `src` **{String}**: Source file path\n* `dest` **{String}**: Destination directory\n* `returns` **{String}**\n\n## Related projects\n\n* [expand-config](https://www.npmjs.com/package/expand-config): Expand tasks, targets and files in a declarative configuration. | [homepage](https://github.com/jonschlinkert/expand-config)\n* [expand-files](https://www.npmjs.com/package/expand-files): Expand glob patterns in a declarative configuration into src-dest mappings. | [homepage](https://github.com/jonschlinkert/expand-files)\n* [expand-target](https://www.npmjs.com/package/expand-target): Expand target definitions in a declarative configuration. | [homepage](https://github.com/jonschlinkert/expand-target)\n* [expand-task](https://www.npmjs.com/package/expand-task): Expand and normalize task definitions in a declarative configuration. | [homepage](https://github.com/jonschlinkert/expand-task)\n* [export-files](https://www.npmjs.com/package/export-files): node.js utility for exporting a directory of files as modules. | [homepage](https://github.com/jonschlinkert/export-files)\n* [write](https://www.npmjs.com/package/write): Write files to disk, creating intermediate directories if they don't exist. | [homepage](https://github.com/jonschlinkert/write)\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/copy/issues/new).\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright Â© 2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on September 14, 2015._\n",
  "readmeFilename": "README.md",
  "_id": "copy@0.1.3",
  "dist": {
    "shasum": "26e6eae8ded3d820aa747008074d424e3b09b67c"
  },
  "_from": "copy@",
  "_resolved": "https://registry.npmjs.org/copy/-/copy-0.1.3.tgz"
}
